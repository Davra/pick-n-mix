// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`graphql Scheam Builder should work with sample 1`] = `
"

# The Party API implementation is responsible for listing partys.
#
#Party rules
#
#* Dont steal our Koozies!
#* Dont drink and drive
#* Say No to Drame
#
#Have fun. 
#* **time** - ISO timestamp
type partys{
      id : String,
      attendees:[accounts_user_item],
      time: String 
    }


# The Party API implementation is responsible for listing partys.
#
#Party rules
#
#* Dont steal our Koozies!
#* Dont drink and drive
#* Say No to Drame
#
#Have fun. 
#* **time** - ISO timestamp
input Inputpartys{
      id : String,
      attendees:[Inputaccounts_user_item],
      time: String 
    }



# No docs found for \\"accounts_user_item\\"?.. add some! 
type accounts_user_item{
      name:String,
      email:String,
      age:Int
    }


# No docs found for \\"accounts_user_item\\"?.. add some! 
input Inputaccounts_user_item{
      name:String,
      email:String,
      age:Int
    }



# No docs found for \\"accounts_user\\"?.. add some! 
type accounts_user{
      user:accounts_user_item
    }


# No docs found for \\"accounts_user\\"?.. add some! 
input Inputaccounts_user{
      user:Inputaccounts_user_item
    }



# No docs found for \\"Handlers\\"?.. add some! 
type Handlers{
      end_points:[String]
    }


# No docs found for \\"Handlers\\"?.. add some! 
input InputHandlers{
      end_points:[String]
    }



# Error info 
#* **type** - type of error,
#* **message** - 'error message',
#* **args** - arguments,
#* **trace** - 'stack trace'
type Error{
      type:String, 
      message:String, 
      args:String,
      trace:String
    }


# Error info 
#* **type** - type of error,
#* **message** - 'error message',
#* **args** - arguments,
#* **trace** - 'stack trace'
input InputError{
      type:String!, 
      message:String!, 
      args:String!,
      trace:String!
    }



# No docs found for \\"Config\\"?.. add some! 
type Config{
      appName:String,
      root:String,
      ipAddress:String,
      port:Int,
      handlers:[Handlers]
    }


# No docs found for \\"Config\\"?.. add some! 
input InputConfig{
      appName:String,
      root:String,
      ipAddress:String,
      port:Int,
      handlers:[InputHandlers]
    }

"
`;
